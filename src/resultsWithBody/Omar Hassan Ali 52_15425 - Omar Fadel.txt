extracted data:
b'\x0c\x0c\x0c\x0cDuring my internship at Giza Systems, my main objective was to gain experience in the \nComputer Engineering field as well as fortify myself for life after college by understanding the \nmain dissimilarities between college and work life. This report includes a brief biography of \nGiza Systems, a thorough discussion of my one-month-experience as a Web development intern \nin Giza System\xe2\x80\x99s CDO/IT Solutions Department as well as the projects I took part in during my \ntime there. This report also includes an overview of my apprenticeship, the skills I managed to \ncultivate and how these skills are related to and can work hand-in-hand with my educational \nexperiences.  \nGiza Systems, founded in 1974, is the leading digital transformation enabler and systems \nintegrator in the MENA region. The company designs and deploys industry-specific technology \nsolutions for asset-intensive industries including Smart-system-integration, Telecommunication, \nUtilities, and Transportation. With over 1400 professionals spread across the region in 6 different \ncities, their wide range of expertise, market knowledge and technical capabilities as well as their \npartnership with global leaders in automation systems and metering infrastructure enable them to \nserve an ever-increasing clientele-base, distributed over 25 countries including Cairo, Riyadh, \nDubai, Doha, and Nairobi, in developing integrated solutions that can work with and build on the \nevolving technologies as well as \xe2\x80\x9cmeet the dynamicity of our customers\xe2\x80\x99 needs\xe2\x80\x9d .  \nMy apprenticeship was conducted mainly through daily online live sessions carried out on \nMicrosoft teams where my direct supervisor would review my work, answer my questions, and \nassign a new task for the day. The main objective of the internship was to create a fully \nfunctional employee management system web-application where it would consist of 3 main \nstages that would be distributed over the course of 4 weeks. The first phase of the project was to \nagree on a suitable software architecture that would expedite the data-retrieving operations as \nefficiently as possible. The agreed-upon structure was an MVC (Model-View-Controller) with \nthree main components that would act as a backbone for the mentioned project. These stages \nconsisted of, firstly, a Database that would send and receive data through queries, views and \nautomated/stored procedures, this database was launched and maintained using MSSQL. The \nflow of events for the database initiation phase was to firstly, create a schema, taking each entity \nwith its corresponding attributes and the appropriate linkages/relations into consideration. \nSecondly, implement the agreed-upon schema using MSSQL and SQL Server Management \n\x0cstudio. Finally, create views and stored/procedures that were predicted to be demanded in \nadvances phases of the project. The database development phase took exactly one week. The \nsecond stage was setting up a backend controller which would manage all data requests to and \nfrom the database. Such controller would be implemented by creating case-specific CRUD APIs \nfor each database entity mentioned earlier, taking every single corresponding attribute into \nconsideration by creating various models that would be used to communicate with the database \nserver. These APIs would then be referenced as a messenger/middleman between the User \ninterface and the database server. These APIs were created using C# programming language and \nASP.NET core tools. A short-term problem we faced during development was API publishing, in \nwhich my operating system was fully resisting the arrangement of releasing the created APIs for \nregular consumption due to local security claims. After an aggregate of 10 hours worth of \ndebugging and problem-solving sessions with my direct supervisor, we were able to get deeply \nthrough each security configuration on my system, that would later act as a server/local host for \nthe project during Alpha testing, and the issue was successfully deciphered. The third and final \nstage of the project was to create a front-end user interface for the project that would tie all the \npreviously mentioned components in one single seamless, efficient, fully functional system. This \nuser interface was designed using TypeScript and Angular libraries and would eventually take \ntwo weeks to design and implement. The interface was divided into many components that was \nbuilt initially using offline mock data without database server connection, after successfully \ntesting the site\xe2\x80\x99s functionality using mock data, the database connection was then added to \nensure that all the previously designed project phases were working in harmony with the newly \ndesigned user interface. After setting up and testing front to back end connections, it was then \ntime to apply the principals of User Experience learned in academic classes to the site, \nprioritizing a seamless user-interaction experience as well as optimizing efficient communication \nto back end facilities.  \n \nThrough my internship experience at Giza Systems, I was able to develop an abstract \nunderstanding of web development that would practically complete principals I had learned at \nthe GUC. It was also important to understand the hierarchy of real-life organizations as to how \ndifferent departments of an organizations work concurrently under different supervision \n\x0cphilosophies to produce products/projects that are up to certain standards and ready for \nconsumption. I was also able to acquire analytical, reporting, time managing and interpersonal \nskills that I would otherwise not have had the chance to be exposed to. It is also very important \nto mention the contacts I made during my time at Giza Systems which would significantly help \nme in life after graduation and through my professional career. In terms of correlation to my \nstudies, an interesting example to consider is applying principals learned during my Database \n1&2 Courses in initiating an efficient and functional database, Networks courses in learning how \nto communicate with servers generally using HTTP requests as well as optimizing a short \nresponse time by learning about different liabilities that would rather obstruct such web packets \nand result in inevitable delays. But most importantly, the Software engineering course taken in \nsemester 6 prepared me for working in a scrum with a scrum master, learning the different \nprinciples and practices of creating an efficient User experience as well as the different \nclassifications and stages of product testing before publishing.  \nAll in All, this internship experience helped me during my journey to determine the most suitable \ncareer path after graduation by taking the chance to peek over life as a web developer. Such \nexperience allowed me reconsider and build many aspects of my professional life in terms of \ncommunication, practicality, punctuality, responsibility and most importantly, work-life balance. \nWith the countless skills I had learnt at the GUC, it is safe to say that my supervisors were \nadequately impressed by the skills I had obtained during my study time in comparison to other \nstudents within the same major in different universities. To conclude, it is safe to say that I was \nvery satisfied with the overall experience of interning at Giza Systems and I would love to obtain \nanother opportunity to work with them again during my career.  \n  \n \n \n \n \n \n\x0c \n'
 response result:
 The performed tasks mentioned in the report are:

1. Creating a fully functional employee management system web application.
2. Agreeing on a suitable software architecture for the project.
3. Developing a database using MSSQL and SQL Server Management Studio.
4. Creating views and stored procedures for the database.
5. Setting up a backend controller to manage data requests.
6. Creating case-specific CRUD APIs for each database entity.
7. Debugging and problem-solving for API publishing.
8. Designing and implementing a front-end user interface using TypeScript and Angular libraries.
9. Testing the functionality of the site using mock data.
10. Adding database connections to the user interface.
11. Applying principles of User Experience to optimize user interaction.
12. Developing an abstract understanding of web development.
13. Acquiring analytical, reporting, time management, and interpersonal skills.
14. Networking and making contacts within the company.
15. Applying knowledge learned in database, networks, and software engineering courses to the internship tasks.
16. Determining a suitable career path after graduation.
17. Building aspects of professional life in terms of communication, practicality, punctuality, responsibility, and work-life balance.
18. Impressing supervisors with skills obtained during study time.
19. Expressing satisfaction with the internship experience at Giza Systems.