Activities
The internship at Salus Lab was a full-time remote internship. We worked 8 hours a day and 5
days per week. In the beginning of every week, we would have a meeting to talk about our
progress and any dif ficulties we faced, get assigned new tasks, and give feedback. I worked as a
Full Stack developer and every task was assigned to two people. My teammate was also a full
stack intern so, for every task, we divided the backend and frontend between the both of us so
that we can get to work on both aspects of the task. We would then coordinate our page with
other pages worked on by other team members so that we can have a fully functioning module.
In this internship, I used Visual Studio Code IDE for writing code. The company’ s stack
consisted of using Node.js, Fastify , and Elasticsearch for the backend, MongoDB for databases,
Redis for caching, Vue.js for the frontend, and Docker . To organize and keep track of tasks, we
used Trello and communicated through Discord. Finally , for source control, we used GitHub.
Figur e 2:
Example of the task or ganization on Trello.
[
2
]
In the first week, I was tasked with setting up the project and the database on my computer . This
took a while as it was my first time using Docker , which the whole project was built upon. For
the second task, I had to design an API to retrieve security data and implement searching logic
for a table with a search functionality . For the data, we were using a public API and only
tweaking the input and output to suit our needs. The challenging part of this task was to
implement the searching algorithm. The data returned was a lot and took a long time to search
when few filters were chosen. To overcome this limitation, I used Redis to cache search results
that are frequently requested. This increased the ef ficiency and speed of the search dramatically .
For the frontend task, we had to mimic the design made by our UI/UX designer on Figma. The
design consisted of a pie chart with a legend, rounded rectangles with data inside them, and a
table with a search bar
[Figur e 3]
. My task in the
frontend was to make this table and connect
the search bar with the search logic that I did in the backend. For the table, I used the Vuetify
Framework and built upon the already implemented table by adding more columns as needed,
pagination, and a search bar
[Figur e 4]
. I also added
a dropdown for the search bar to select
certain filters
[Figur e 5]
as well as pills under
the search bar to show the currently selected filters
[Figur e 6]
.
Figur e 3:
The design of the page for the first task.
Figur e 4:
Table and search bar .
Figur e 5:
Drop down menu
Figur e 6:
Pills under search bar .
For my next task, I designed an API that would store IP  addresses and another one that would
retrieve them. I used MongoDB to store any newly entered IP  addresses and validated that a
newly added IP  address doesn’ t already exist in the database. For the frontend, I used a similar
table as in
Figur e 3
to show the retrieved IP  addresses.
Moreover , I made a form with two
textboxes to enter a node’ s IP address as well as its name
[Figur e 6]
. I also added validation to
make sure the IP  address was a valid IPv4 or IPv6 address.
Figur e 6:
Input fields for adding a node.
My fourth task was fully backend. I was responsible for setting up the usage of a public API
from scratch. My task included setting up the API key and then making several dif ferent API’ s
that would use the public API. I then had to coordinate my work with my teammate who was
working on the frontend. Luckily enough, it went smoothly and we were able to finish the task in
less than a week. For my final task, I had to implement a search functionality using the search
engine, Elasticsearch. This task was a little dif ficult as it required a lot of research to understand
how to set up Elasticsearch, how the queries were formulated, and how to parse the returned
result.
Internship 