ActivitiesThe internship at Salus Lab was a full-time remote internship. We worked 8 hours a day and 5days per week. In the beginning of every week, we would have a meeting to talk about ourprogress and any difficulties we faced, get assigned new tasks, and give feedback. I worked as aFull Stack developer and every task was assigned to two people. My teammate was also a fullstack intern so, for every task, we divided the backend and frontend between the both of us sothat we can get to work on both aspects of the task. We would then coordinate our page withother pages worked on by other team members so that we can have a fully functioning module.In this internship, I used Visual Studio Code IDE for writing code. The company’s stackconsisted of using Node.js, Fastify, and Elasticsearch for the backend, MongoDB for databases,Redis for caching, Vue.js for the frontend, and Docker. To organize and keep track of tasks, weused Trello and communicated through Discord. Finally, for source control, we used GitHub.Figure 2: Example of the task organization on Trello. [2]In the first week, I was tasked with setting up the project and the database on my computer. Thistook a while as it was my first time using Docker, which the whole project was built upon. Forthe second task, I had to design an API to retrieve security data and implement searching logicfor a table with a search functionality. For the data, we were using a public API and onlytweaking the input and output to suit our needs. The challenging part of this task was toimplement the searching algorithm. The data returned was a lot and took a long time to searchwhen few filters were chosen. To overcome this limitation, I used Redis to cache search resultsthat are frequently requested. This increased the efficiency and speed of the search dramatically.For the frontend task, we had to mimic the design made by our UI/UX designer on Figma. Thedesign consisted of a pie chart with a legend, rounded rectangles with data inside them, and atable with a search bar [Figure 3]. My task in the frontend was to make this table and connectthe search bar with the search logic that I did in the backend. For the table, I used the VuetifyFramework and built upon the already implemented table by adding more columns as needed,pagination, and a search bar [Figure 4]. I also added a dropdown for the search bar to selectcertain filters [Figure 5] as well as pills under the search bar to show the currently selected filters[Figure 6].Figure 3: The design of the page for the first task.Figure 4: Table and search bar.Figure 5: Drop down menuFigure 6: Pills under search bar.For my next task, I designed an API that would store IP addresses and another one that wouldretrieve them. I used MongoDB to store any newly entered IP addresses and validated that anewly added IP address doesn’t already exist in the database. For the frontend, I used a similartable as in Figure 3 to show the retrieved IP addresses. Moreover, I made a form with twotextboxes to enter a node’s IP address as well as its name [Figure 6]. I also added validation tomake sure the IP address was a valid IPv4 or IPv6 address.Figure 6: Input fields for adding a node.My fourth task was fully backend. I was responsible for setting up the usage of a public APIfrom scratch. My task included setting up the API key and then making several different API’sthat would use the public API. I then had to coordinate my work with my teammate who wasworking on the frontend. Luckily enough, it went smoothly and we were able to finish the task inless than a week. For my final task, I had to implement a search functionality using the searchengine, Elasticsearch. This task was a little difficult as it required a lot of research to understandhow to set up Elasticsearch, how the queries were formulated, and how to parse the returnedresult.Internship 