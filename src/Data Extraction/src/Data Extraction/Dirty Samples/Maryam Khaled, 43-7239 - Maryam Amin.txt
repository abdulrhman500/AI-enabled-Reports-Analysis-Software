Tasks Performed:  
This section includes:  
1. Brief intr oduction on previous work  
2. Overview of how we used the MERN stack  
3. Tasks performed which include : 
i. Frontend – compon ents used along with t heir pictures  ii. Conn ecting the front end to the backend  
iii. Deployment  
 
1. Brief introduction on previous work  
This internship opportunity was a continuation of previous work done by students  who managed 
to collect  a dataset with features about Arabic movies from the 40s to the 70s from a website 
called elcinema.com . They analyzed  features relevant to cast members and trends of stardom and 
cast correlations over time, and analyzed the plots themselves for word usage and plot themes 
and how they evolved over time .  
2. Overvi ew of  how we used the MERN stack  
We achieved our work using the MERN sta ck, which is an architecture that all ows you to 
construct a 3 -tier ar chitecture (frontend, backend, database)  using JavaScript and JSON . We used 
React.js to build up the  following components, and we used Mon goDB database for storing data 
for later retrie val and Express. js framework  and Node.js server for URL routing and handli ng 
HTTP requests and responses. By making GET and POST request from th e front end, we 
connected to Expres s.js functio ns which powered our application .  
We used Visual Studio Code in order to implement ou r appli cation  
 
3. Tasks Performed  
The main task that I was enrolled  in in this internship was creating  the frontend of  the website to 
display the results of what was achieved  by the  Data Engineering tasks. This was achieved using 
the Reac t frontend li brary.   
Firstly , we started by discussing the structure as well as the design of our website . The website 
has various  features  and I will be discussing each feature  and how it was achieve d. For these 
features, we used Material UI, a comprehensive library of components that  features the 
implementation of Google’s Material Design system , and provides robust, customizable, and acces sible  foundational and advanced components, enabling you to build and design your system 
and develop React applications.  
When  we first open the website,  the home page is displayed, which contains  movie s, a login 
option, a signup option, and a search bar  as demonstrated below . 
 
I will be providing screenshots of the components  create d. 
i. Frontend  
1. The SignUp  Component  
The following screenshot shows what our SignUp component looks like. There are 6 
textfields for the user to fill in. The user can fill in their username, first name, last name, 
email address, password, and a password confirmation in order to sign up. When the user 
clicks on the SIGN UP button, their data will be stored in our database, and will be redirected 
to the login page as shown below.  
 
 
2. The Login  Component  
This component contains a textfield to enter your username, and another textfield to enter 
your password and then the log in button . If the user enters correct credentials , the data will 
be verified by the database and the user will be successfully logged in  and then will be 
redirected to the home page, indicating their username in the taskbar at the top . This is 
demonstrated below:  
 
If the user enters wrong data, they will also be notified  that the login failed, indicating that 
the username and password combination does not exist in the database  as shown below . 
 
 
3. The Search Bar Component  
 
This component allows the user to search for a certain movie . The user types in the name of 
the movie in t he search bar and the movie appears in the results.  
The following shows an example of searching for the movie ""ابن عنتر:  
 
And its result:  
 
 
 
4. The Button Group Component  
This is a responsive drawer that displays a button group when clicked on, and the button 
group shows all the genres of the movies from which the user can choose form , as displayed  
on the left  in the following:  
 
These are the resulting movies after clicking on ""دراما  button, as indicated by the / دراما in the 
URL  shown above:  
 
 
5. The Movie Card Component  
The user can click on any movie of preference and they will be redirected to a page that 
displays information about that movie. The information includes the movie’s nam e, its 
summary, its rating, its genre, the cast, its duration, its release date and starring.  
The following is an example illustrating what is mentioned above after clicking on the movie 
 ""النيل والحياة  : 
 
6. The Star Rating Component  
Moreover, the user can  rate the movie using a scale of 5 stars which they can find below the 
movie information  as shown above.  
 
The user can also delete their old ra ting and rate a gain according to their preference.  
ii. Connec ting the frontend to the backend  
To connect the fronten d to the backend, for each of the co mponents used above, we used Axios, 
a promised -based HTTP client for Java Script , and has the ability to make HTTP requests from 
the browser and handle the trans formation  of request and response data . We used axios.get(url) 
and axios.post( url) whenever we needed to retrieve an o bject using a promise and inside th at 
object is data that is then assigned to a certain value.  
iii. Deployment  
The backend part of our application was deployed using Heroku,  a Paa S that enab led us to build  
and run our appl ication ent irely in the cloud . 
The frontend part of our application was deployed using Netlify , also a tool used to develop and 
deplo y a Reac t project. We first installed some comm ands from Netlify on our terminal, then we 
used Netlify CL I to deploy our React  app, and then creating our website ’s domain name.  
 
Internship 